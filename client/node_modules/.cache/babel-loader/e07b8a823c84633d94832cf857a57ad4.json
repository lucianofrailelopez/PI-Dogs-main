{"ast":null,"code":"// /* eslint-disable react-hooks/exhaustive-deps */\n// /* eslint-disable no-sequences */\n// import React from \"react\";\n// import { useState, useEffect } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { getDogs, orderDogs, filterByIdType } from \"../../redux/actions/index\";\n// import styles from \"./dogsCards.module.css\";\n// import DogCard from \"../dogCard/dogCard\";\n// import FilterTemperament from \"../filtertemperament/filterTemperament\";\n\n// const DogCards = () => {\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const itemsPerPage = 8;\n\n//   const dispatch = useDispatch();\n//   const allCharacters = useSelector((state) => state.charactersDogs);\n//   const filteredDogs = useSelector((state) => state.filteredDogs);\n\n//   useEffect(() => {\n//     dispatch(getDogs());\n//   }, []);\n\n//   const dogsToDisplay = filteredDogs.length > 0 ? filteredDogs : allCharacters;\n\n//   const indexOfLastItem = currentPage * itemsPerPage;\n//   const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n//   const dogCardList = dogsToDisplay.slice(indexOfFirstItem, indexOfLastItem);\n\n//   const totalPages = Math.ceil(dogsToDisplay.length / itemsPerPage);\n\n//   const nextPage = () => {\n//     if (currentPage < totalPages) {\n//       setCurrentPage(currentPage + 1);\n//     }\n//   };\n//   const prevPage = () => {\n//     if (currentPage > 1) {\n//       setCurrentPage(currentPage - 1);\n//     }\n//   };\n\n//   const handleOrder = (e) => {\n//     dispatch(orderDogs(e.target.value));\n//   };\n\n//   return (\n//     <div className={styles.containerCards}>\n//       <div className={styles.containerSelect}>\n//         <FilterTemperament />\n//         <select\n//           onChange={(e) => {\n//             dispatch(filterByIdType(e.target.value));\n//           }}\n//         >\n//           <option value=\"all\">Show All</option>\n//           <option value=\"numeric\">Numeric IDs</option>\n//           <option value=\"uuid\">UUID IDs</option>\n//         </select>\n//         <select onChange={handleOrder}>\n//           <option value=\"A\">Upward</option>\n//           <option value=\"D\">Falling</option>\n//         </select>\n//       </div>\n//       <div className={styles.cards}>\n//         {dogCardList?.map((data) => {\n//           return (\n//             <DogCard\n//               id={data.id}\n//               name={data.name}\n//               image={data.image}\n//               temperament={data.temperament}\n//               weight={data.weight}\n//             />\n//           );\n//         })}\n//       </div>\n//       <div className={styles.containerPaginated}>\n//         <button\n//           className={styles.buttonPrev}\n//           onClick={prevPage}\n//           disabled={currentPage === 1}\n//         ></button>\n//         <span>\n//           {currentPage} of {totalPages}\n//         </span>\n//         <button\n//           className={styles.buttonNext}\n//           onClick={nextPage}\n//           disabled={currentPage === totalPages}\n//         ></button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DogCards;\n\n// import React from \"react\";\n// import { useState, useEffect } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { getDogs, orderDogs, filterByIdType } from \"../../redux/actions/index\";\n// import styles from \"./dogsCards.module.css\";\n// import DogCard from \"../dogCard/dogCard\";\n// import FilterTemperament from \"../filtertemperament/filterTemperament\";\n\n// const DogCards = () => {\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const itemsPerPage = 8;\n\n//   const dispatch = useDispatch();\n//   const allCharacters = useSelector((state) => state.charactersDogs);\n//   const filteredDogs = useSelector((state) => state.filteredDogs);\n\n//   useEffect(() => {\n//     dispatch(getDogs());\n//   }, []);\n\n//   const dogsToDisplay = filteredDogs.length > 0 ? filteredDogs : allCharacters;\n\n//   const indexOfLastItem = currentPage * itemsPerPage;\n//   const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n//   const dogCardList = dogsToDisplay.slice(indexOfFirstItem, indexOfLastItem);\n\n//   const totalPages = Math.ceil(dogsToDisplay.length / itemsPerPage);\n\n//   const nextPage = () => {\n//     if (currentPage < totalPages) {\n//       setCurrentPage(currentPage + 1);\n//     }\n//   };\n//   const prevPage = () => {\n//     if (currentPage > 1) {\n//       setCurrentPage(currentPage - 1);\n//     }\n//   };\n\n//   const handleOrder = (e) => {\n//     dispatch(orderDogs(e.target.value));\n//   };\n\n//   return (\n//     <div className={styles.containerCards}>\n//       <div className={styles.containerSelect}>\n//         <FilterTemperament />\n//         <select\n//           onChange={(e) => {\n//             dispatch(filterByIdType(e.target.value));\n//           }}\n//         >\n//           <option value=\"all\">Show All</option>\n//           <option value=\"numeric\">Numeric IDs</option>\n//           <option value=\"uuid\">UUID IDs</option>\n//         </select>\n//         <select onChange={handleOrder}>\n//           <option value=\"A\">Upward</option>\n//           <option value=\"D\">Falling</option>\n//         </select>\n//       </div>\n//       <div className={styles.cards}>\n//         {dogCardList?.map((data) => (\n//           <DogCard\n//             id={data.id}\n//             name={data.name}\n//             image={data.image}\n//             temperament={data.temperament}\n//             weight={data.weight}\n//           />\n//         ))}\n//       </div>\n//       <div className={styles.containerPaginated}>\n//         <button\n//           className={styles.buttonPrev}\n//           onClick={prevPage}\n//           disabled={currentPage === 1}\n//         ></button>\n//         <span>\n//           {currentPage} of {totalPages}\n//         </span>\n//         <button\n//           className={styles.buttonNext}\n//           onClick={nextPage}\n//           disabled={currentPage === totalPages}\n//         ></button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DogCards;","map":{"version":3,"names":[],"sources":["/Users/luciano/Desktop/PI-Dogs-main/client/src/components/dogsCards/dogsCards.jsx"],"sourcesContent":["// /* eslint-disable react-hooks/exhaustive-deps */\n// /* eslint-disable no-sequences */\n// import React from \"react\";\n// import { useState, useEffect } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { getDogs, orderDogs, filterByIdType } from \"../../redux/actions/index\";\n// import styles from \"./dogsCards.module.css\";\n// import DogCard from \"../dogCard/dogCard\";\n// import FilterTemperament from \"../filtertemperament/filterTemperament\";\n\n// const DogCards = () => {\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const itemsPerPage = 8;\n\n//   const dispatch = useDispatch();\n//   const allCharacters = useSelector((state) => state.charactersDogs);\n//   const filteredDogs = useSelector((state) => state.filteredDogs);\n\n//   useEffect(() => {\n//     dispatch(getDogs());\n//   }, []);\n\n//   const dogsToDisplay = filteredDogs.length > 0 ? filteredDogs : allCharacters;\n\n//   const indexOfLastItem = currentPage * itemsPerPage;\n//   const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n//   const dogCardList = dogsToDisplay.slice(indexOfFirstItem, indexOfLastItem);\n\n//   const totalPages = Math.ceil(dogsToDisplay.length / itemsPerPage);\n\n//   const nextPage = () => {\n//     if (currentPage < totalPages) {\n//       setCurrentPage(currentPage + 1);\n//     }\n//   };\n//   const prevPage = () => {\n//     if (currentPage > 1) {\n//       setCurrentPage(currentPage - 1);\n//     }\n//   };\n\n//   const handleOrder = (e) => {\n//     dispatch(orderDogs(e.target.value));\n//   };\n\n//   return (\n//     <div className={styles.containerCards}>\n//       <div className={styles.containerSelect}>\n//         <FilterTemperament />\n//         <select\n//           onChange={(e) => {\n//             dispatch(filterByIdType(e.target.value));\n//           }}\n//         >\n//           <option value=\"all\">Show All</option>\n//           <option value=\"numeric\">Numeric IDs</option>\n//           <option value=\"uuid\">UUID IDs</option>\n//         </select>\n//         <select onChange={handleOrder}>\n//           <option value=\"A\">Upward</option>\n//           <option value=\"D\">Falling</option>\n//         </select>\n//       </div>\n//       <div className={styles.cards}>\n//         {dogCardList?.map((data) => {\n//           return (\n//             <DogCard\n//               id={data.id}\n//               name={data.name}\n//               image={data.image}\n//               temperament={data.temperament}\n//               weight={data.weight}\n//             />\n//           );\n//         })}\n//       </div>\n//       <div className={styles.containerPaginated}>\n//         <button\n//           className={styles.buttonPrev}\n//           onClick={prevPage}\n//           disabled={currentPage === 1}\n//         ></button>\n//         <span>\n//           {currentPage} of {totalPages}\n//         </span>\n//         <button\n//           className={styles.buttonNext}\n//           onClick={nextPage}\n//           disabled={currentPage === totalPages}\n//         ></button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DogCards;\n\n// import React from \"react\";\n// import { useState, useEffect } from \"react\";\n// import { useDispatch, useSelector } from \"react-redux\";\n// import { getDogs, orderDogs, filterByIdType } from \"../../redux/actions/index\";\n// import styles from \"./dogsCards.module.css\";\n// import DogCard from \"../dogCard/dogCard\";\n// import FilterTemperament from \"../filtertemperament/filterTemperament\";\n\n// const DogCards = () => {\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const itemsPerPage = 8;\n\n//   const dispatch = useDispatch();\n//   const allCharacters = useSelector((state) => state.charactersDogs);\n//   const filteredDogs = useSelector((state) => state.filteredDogs);\n\n//   useEffect(() => {\n//     dispatch(getDogs());\n//   }, []);\n\n//   const dogsToDisplay = filteredDogs.length > 0 ? filteredDogs : allCharacters;\n\n//   const indexOfLastItem = currentPage * itemsPerPage;\n//   const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n//   const dogCardList = dogsToDisplay.slice(indexOfFirstItem, indexOfLastItem);\n\n//   const totalPages = Math.ceil(dogsToDisplay.length / itemsPerPage);\n\n//   const nextPage = () => {\n//     if (currentPage < totalPages) {\n//       setCurrentPage(currentPage + 1);\n//     }\n//   };\n//   const prevPage = () => {\n//     if (currentPage > 1) {\n//       setCurrentPage(currentPage - 1);\n//     }\n//   };\n\n//   const handleOrder = (e) => {\n//     dispatch(orderDogs(e.target.value));\n//   };\n\n//   return (\n//     <div className={styles.containerCards}>\n//       <div className={styles.containerSelect}>\n//         <FilterTemperament />\n//         <select\n//           onChange={(e) => {\n//             dispatch(filterByIdType(e.target.value));\n//           }}\n//         >\n//           <option value=\"all\">Show All</option>\n//           <option value=\"numeric\">Numeric IDs</option>\n//           <option value=\"uuid\">UUID IDs</option>\n//         </select>\n//         <select onChange={handleOrder}>\n//           <option value=\"A\">Upward</option>\n//           <option value=\"D\">Falling</option>\n//         </select>\n//       </div>\n//       <div className={styles.cards}>\n//         {dogCardList?.map((data) => (\n//           <DogCard\n//             id={data.id}\n//             name={data.name}\n//             image={data.image}\n//             temperament={data.temperament}\n//             weight={data.weight}\n//           />\n//         ))}\n//       </div>\n//       <div className={styles.containerPaginated}>\n//         <button\n//           className={styles.buttonPrev}\n//           onClick={prevPage}\n//           disabled={currentPage === 1}\n//         ></button>\n//         <span>\n//           {currentPage} of {totalPages}\n//         </span>\n//         <button\n//           className={styles.buttonNext}\n//           onClick={nextPage}\n//           disabled={currentPage === totalPages}\n//         ></button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DogCards;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module"}