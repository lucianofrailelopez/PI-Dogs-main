{"ast":null,"code":"/* eslint-disable no-useless-escape */\nconst validations = data => {\n  var _data$temperaments;\n  const errors = {};\n  var regex = /^[a-zA-Z\\s]*$/;\n  var regexImage = /^(http(s)?:\\/\\/)?(www\\.)?[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+([a-zA-Z0-9_\\-\\.\\?\\\\/\\+=&;%#_]*)?$/;\n  if (!regex.test(data.name)) {\n    errors.name = \"Insert name with letters only!\";\n  } else if (data.name.trim() === \"\") {\n    errors.name = \"Insert name!\";\n  } else if (data.name.length > 10) {\n    errors.name = \"Insert name with less than 10 letters!\";\n  }\n  if (regexImage.test(data.image)) {\n    errors.image = \"Insert name with less than 10 letters!\";\n  } else if (data.image.trim() === \"\") {\n    errors.image = \"Insert image!\";\n  }\n  var height = data.height.split(\"-\").map(numero => parseInt(numero.trim()));\n  if (height.length !== 2 || isNaN(height[0]) || isNaN(height[1]) || height[0] > height[1]) {\n    errors.height = \"Insert a min and a max, Eg: 31 - 40\";\n  } else if (data.height.trim() === \"\") {\n    errors.height = \"Insert a min and a max, Eg: 31 - 40\";\n  }\n  var weight = data.weight.split(\"-\").map(numero => parseInt(numero.trim()));\n  if (weight.length !== 2 || isNaN(weight[0]) || isNaN(weight[1]) || weight[0] > weight[1]) {\n    errors.weight = \"Insert a min and a max, Eg: 11 - 20\";\n  } else if (data.weight.trim() === \"\") {\n    errors.weight = \"Insert a min and a max, Eg: 11 - 20\";\n  }\n  var yearsNumeric = parseInt(data.life_span.match(/\\d+/));\n  if (isNaN(yearsNumeric) || yearsNumeric < 0 || yearsNumeric > 20) {\n    errors.life_span = \"Life Years are not valid\";\n  } else if (data.life_span.trim() === \"\") {\n    errors.life_span = \"insert years of life, eg: 11 Years\";\n  }\n  if (((_data$temperaments = data.temperaments) === null || _data$temperaments === void 0 ? void 0 : _data$temperaments.length) < 1) {\n    errors.temperament = \"Insert Temperament\";\n  }\n  return errors;\n};\nexport default validations;","map":{"version":3,"names":["validations","data","_data$temperaments","errors","regex","regexImage","test","name","trim","length","image","height","split","map","numero","parseInt","isNaN","weight","yearsNumeric","life_span","match","temperaments","temperament"],"sources":["/Users/luciano/Desktop/PI-Dogs-main/client/src/components/Form/validate.js"],"sourcesContent":["/* eslint-disable no-useless-escape */\nconst validations = (data) => {\n  const errors = {};\n\n  var regex = /^[a-zA-Z\\s]*$/;\n  var regexImage = /^(http(s)?:\\/\\/)?(www\\.)?[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+([a-zA-Z0-9_\\-\\.\\?\\\\/\\+=&;%#_]*)?$/;\n\n  if (!regex.test(data.name)) {\n    errors.name = \"Insert name with letters only!\";\n  } else if (data.name.trim() === \"\") {\n    errors.name = \"Insert name!\";\n  } else if (data.name.length > 10) {\n    errors.name = \"Insert name with less than 10 letters!\";\n  }\n\n  if (regexImage.test(data.image)) {\n    errors.image = \"Insert name with less than 10 letters!\";\n  } else if (data.image.trim() === \"\") {\n    errors.image = \"Insert image!\";\n  }\n\n  var height = data.height.split(\"-\").map((numero) => parseInt(numero.trim()));\n  if (\n    height.length !== 2 ||\n    isNaN(height[0]) || isNaN(height[1]) ||\n    height[0] > height[1]\n  ) {\n    errors.height = \"Insert a min and a max, Eg: 31 - 40\";\n  } else if (data.height.trim() === \"\") {\n    errors.height = \"Insert a min and a max, Eg: 31 - 40\";\n  }\n\n  var weight = data.weight.split(\"-\").map((numero) => parseInt(numero.trim()));\n  if (\n    weight.length !== 2 ||\n    isNaN(weight[0]) || isNaN(weight[1]) ||\n    weight[0] > weight[1]\n  ) {\n    errors.weight = \"Insert a min and a max, Eg: 11 - 20\";\n  } else if (data.weight.trim() === \"\") {\n    errors.weight = \"Insert a min and a max, Eg: 11 - 20\";\n  }\n\n  var yearsNumeric = parseInt(data.life_span.match(/\\d+/));\n  \n  if (isNaN(yearsNumeric) || yearsNumeric < 0 || yearsNumeric > 20) {\n    errors.life_span = \"Life Years are not valid\";\n  } else if(data.life_span.trim() === \"\") {\n    errors.life_span = \"insert years of life, eg: 11 Years\";\n  }\n\n  if (data.temperaments?.length < 1) {\n    errors.temperament = \"Insert Temperament\";\n  }\n\n  return errors;\n};\n\nexport default validations;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}