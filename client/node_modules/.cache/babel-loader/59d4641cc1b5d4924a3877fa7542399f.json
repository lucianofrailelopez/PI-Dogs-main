{"ast":null,"code":"import dotenv from 'dotenv';\nimport axios from \"axios\";\nimport { GETDOGS, GETDOGBYID, GETDOGSBYNAME, GETTEMPERAMENT, FILTEREDTEMPERAMENT, ORDER, CREATEDOG } from \"./types\";\ndotenv.config();\nconst {\n  URL\n} = process.env;\nexport const getDogs = () => async dispatch => {\n  try {\n    const response = await axios.get(`${URL}/dogs`);\n    const data = response.data;\n    return dispatch({\n      type: GETDOGS,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getDogById = id => async dispatch => {\n  try {\n    const response = await axios.get(`http://localhost:3001/dogs/${id}`);\n    const data = response.data;\n    return dispatch({\n      type: GETDOGBYID,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getDogsByName = dataName => async dispatch => {\n  try {\n    const response = await axios.get(`${URL}/dogsname?name=${dataName}`);\n    const data = response.data;\n    if (dataName === \"\") {\n      return dispatch({\n        type: GETDOGSBYNAME,\n        payload: []\n      });\n    } else {\n      return dispatch({\n        type: GETDOGSBYNAME,\n        payload: data\n      });\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getTemperament = () => async dispatch => {\n  try {\n    const response = await axios.get(`${URL}/temperaments`);\n    const data = response.data;\n    return dispatch({\n      type: GETTEMPERAMENT,\n      payload: data\n    });\n  } catch (error) {\n    return console.log(error.message);\n  }\n};\nexport const filterTemperaments = selectedTemperament => async (dispatch, getState) => {\n  try {\n    const allCharacters = getState().charactersDogs;\n    if (selectedTemperament === \"allcharacters\") {\n      dispatch({\n        type: FILTEREDTEMPERAMENT,\n        payload: allCharacters\n      });\n    } else {\n      const filteredByTemperament = allCharacters.filter(dog => dog.temperament && dog.temperament.split(',').map(item => item.trim()).includes(selectedTemperament));\n      dispatch({\n        type: FILTEREDTEMPERAMENT,\n        payload: filteredByTemperament\n      });\n    }\n  } catch (error) {\n    return console.log(error.message);\n  }\n};\nexport const orderDogs = order => {\n  return {\n    type: ORDER,\n    payload: order\n  };\n};\nexport const createDog = data => async dispatch => {\n  try {\n    const response = await axios.post(URL, data);\n    return response.message;\n  } catch (error) {\n    return console.log(error.message);\n  }\n};","map":{"version":3,"names":["dotenv","axios","GETDOGS","GETDOGBYID","GETDOGSBYNAME","GETTEMPERAMENT","FILTEREDTEMPERAMENT","ORDER","CREATEDOG","config","URL","process","env","getDogs","dispatch","response","get","data","type","payload","error","console","log","message","getDogById","id","getDogsByName","dataName","getTemperament","filterTemperaments","selectedTemperament","getState","allCharacters","charactersDogs","filteredByTemperament","filter","dog","temperament","split","map","item","trim","includes","orderDogs","order","createDog","post"],"sources":["/Users/luciano/Desktop/PI-Dogs-main/client/src/redux/actions/index.js"],"sourcesContent":["import dotenv from 'dotenv'; \nimport axios from \"axios\";\nimport {\n  GETDOGS,\n  GETDOGBYID,\n  GETDOGSBYNAME,\n  GETTEMPERAMENT,\n  FILTEREDTEMPERAMENT,\n  ORDER,\n  CREATEDOG\n} from \"./types\";\ndotenv.config();\n\nconst {URL} = process.env;\n\nexport const getDogs = () => async (dispatch) => {\n  try {\n    const response = await axios.get(`${URL}/dogs`);\n    const data = response.data;\n    return dispatch({\n      type: GETDOGS,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getDogById = (id) => async (dispatch) => {\n  try {\n    const response = await axios.get(`http://localhost:3001/dogs/${id}`);\n    const data = response.data;\n    return dispatch({\n      type: GETDOGBYID,\n      payload: data,\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getDogsByName = (dataName) => async (dispatch) => {\n  try {\n    const response = await axios.get(\n      `${URL}/dogsname?name=${dataName}`\n    );\n    const data = response.data;\n    if (dataName === \"\") {\n      return dispatch({\n        type: GETDOGSBYNAME,\n        payload: [],\n      });\n    } else {\n      return dispatch({\n        type: GETDOGSBYNAME,\n        payload: data,\n      });\n    }\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const getTemperament = () => async (dispatch) => {\n  try {\n    const response = await axios.get(`${URL}/temperaments`);\n    const data = response.data;\n    return dispatch({\n      type: GETTEMPERAMENT,\n      payload: data,\n    });\n  } catch (error) {\n    return console.log(error.message);\n  }\n};\n\nexport const filterTemperaments = (selectedTemperament) => async (dispatch, getState) => {\n  try {\n    const allCharacters = getState().charactersDogs;\n  \n    if (selectedTemperament === \"allcharacters\") {\n      dispatch({\n        type: FILTEREDTEMPERAMENT,\n        payload: allCharacters,\n      });\n    } else {\n      const filteredByTemperament = allCharacters.filter((dog) =>\n      dog.temperament && dog.temperament.split(',').map(item => item.trim()).includes(selectedTemperament)\n      );\n      \n      dispatch({\n        type: FILTEREDTEMPERAMENT,\n        payload: filteredByTemperament,\n      });\n    }\n  } catch (error) {\n    return console.log(error.message);\n  }\n};\n\nexport const orderDogs = (order) => {\n  return { type: ORDER, payload: order };\n};\n\n\nexport const createDog = (data) => async (dispatch) => {\n  try {\n    const response = await axios.post(URL, data);\n    return response.message;\n  } catch (error) {\n    return console.log(error.message);\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}